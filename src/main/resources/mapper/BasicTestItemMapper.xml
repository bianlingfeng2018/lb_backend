<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libiao.customer.dal.mapper.BasicTestItemMapper">
  <resultMap id="BaseResultMap" type="com.libiao.customer.dal.model.BasicTestItem">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="period" jdbcType="VARCHAR" property="period" />
    <result column="quantity" jdbcType="VARCHAR" property="quantity" />
    <result column="sub_contract" jdbcType="VARCHAR" property="subContract" />
    <result column="com_name" jdbcType="VARCHAR" property="comName" />
    <result column="ext1" jdbcType="VARCHAR" property="ext1" />
    <result column="ext2" jdbcType="VARCHAR" property="ext2" />
    <result column="ext3" jdbcType="VARCHAR" property="ext3" />
    <result column="ext4" jdbcType="VARCHAR" property="ext4" />
    <result column="ext5" jdbcType="VARCHAR" property="ext5" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.libiao.customer.dal.model.BasicTestItem">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    id, name, unit, price, period, quantity, sub_contract, com_name, ext1, ext2, ext3, 
    ext4, ext5
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.libiao.customer.dal.model.BasicTestItemExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from basic_test_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.libiao.customer.dal.model.BasicTestItemExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from basic_test_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from basic_test_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    delete from basic_test_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.libiao.customer.dal.model.BasicTestItemExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    delete from basic_test_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.libiao.customer.dal.model.BasicTestItem">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    insert into basic_test_item (id, name, unit, 
      price, period, quantity, 
      sub_contract, com_name, ext1, 
      ext2, ext3, ext4, ext5, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{price,jdbcType=INTEGER}, #{period,jdbcType=VARCHAR}, #{quantity,jdbcType=VARCHAR}, 
      #{subContract,jdbcType=VARCHAR}, #{comName,jdbcType=VARCHAR}, #{ext1,jdbcType=VARCHAR}, 
      #{ext2,jdbcType=VARCHAR}, #{ext3,jdbcType=VARCHAR}, #{ext4,jdbcType=VARCHAR}, #{ext5,jdbcType=VARCHAR}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.libiao.customer.dal.model.BasicTestItem">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    insert into basic_test_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="subContract != null">
        sub_contract,
      </if>
      <if test="comName != null">
        com_name,
      </if>
      <if test="ext1 != null">
        ext1,
      </if>
      <if test="ext2 != null">
        ext2,
      </if>
      <if test="ext3 != null">
        ext3,
      </if>
      <if test="ext4 != null">
        ext4,
      </if>
      <if test="ext5 != null">
        ext5,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="period != null">
        #{period,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=VARCHAR},
      </if>
      <if test="subContract != null">
        #{subContract,jdbcType=VARCHAR},
      </if>
      <if test="comName != null">
        #{comName,jdbcType=VARCHAR},
      </if>
      <if test="ext1 != null">
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null">
        #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="ext4 != null">
        #{ext4,jdbcType=VARCHAR},
      </if>
      <if test="ext5 != null">
        #{ext5,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.libiao.customer.dal.model.BasicTestItemExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    select count(*) from basic_test_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    update basic_test_item
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.name != null">
        name = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.unit != null">
        unit = #{row.unit,jdbcType=VARCHAR},
      </if>
      <if test="row.price != null">
        price = #{row.price,jdbcType=INTEGER},
      </if>
      <if test="row.period != null">
        period = #{row.period,jdbcType=VARCHAR},
      </if>
      <if test="row.quantity != null">
        quantity = #{row.quantity,jdbcType=VARCHAR},
      </if>
      <if test="row.subContract != null">
        sub_contract = #{row.subContract,jdbcType=VARCHAR},
      </if>
      <if test="row.comName != null">
        com_name = #{row.comName,jdbcType=VARCHAR},
      </if>
      <if test="row.ext1 != null">
        ext1 = #{row.ext1,jdbcType=VARCHAR},
      </if>
      <if test="row.ext2 != null">
        ext2 = #{row.ext2,jdbcType=VARCHAR},
      </if>
      <if test="row.ext3 != null">
        ext3 = #{row.ext3,jdbcType=VARCHAR},
      </if>
      <if test="row.ext4 != null">
        ext4 = #{row.ext4,jdbcType=VARCHAR},
      </if>
      <if test="row.ext5 != null">
        ext5 = #{row.ext5,jdbcType=VARCHAR},
      </if>
      <if test="row.remark != null">
        remark = #{row.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    update basic_test_item
    set id = #{row.id,jdbcType=INTEGER},
      name = #{row.name,jdbcType=VARCHAR},
      unit = #{row.unit,jdbcType=VARCHAR},
      price = #{row.price,jdbcType=INTEGER},
      period = #{row.period,jdbcType=VARCHAR},
      quantity = #{row.quantity,jdbcType=VARCHAR},
      sub_contract = #{row.subContract,jdbcType=VARCHAR},
      com_name = #{row.comName,jdbcType=VARCHAR},
      ext1 = #{row.ext1,jdbcType=VARCHAR},
      ext2 = #{row.ext2,jdbcType=VARCHAR},
      ext3 = #{row.ext3,jdbcType=VARCHAR},
      ext4 = #{row.ext4,jdbcType=VARCHAR},
      ext5 = #{row.ext5,jdbcType=VARCHAR},
      remark = #{row.remark,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    update basic_test_item
    set id = #{row.id,jdbcType=INTEGER},
      name = #{row.name,jdbcType=VARCHAR},
      unit = #{row.unit,jdbcType=VARCHAR},
      price = #{row.price,jdbcType=INTEGER},
      period = #{row.period,jdbcType=VARCHAR},
      quantity = #{row.quantity,jdbcType=VARCHAR},
      sub_contract = #{row.subContract,jdbcType=VARCHAR},
      com_name = #{row.comName,jdbcType=VARCHAR},
      ext1 = #{row.ext1,jdbcType=VARCHAR},
      ext2 = #{row.ext2,jdbcType=VARCHAR},
      ext3 = #{row.ext3,jdbcType=VARCHAR},
      ext4 = #{row.ext4,jdbcType=VARCHAR},
      ext5 = #{row.ext5,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.libiao.customer.dal.model.BasicTestItem">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    update basic_test_item
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=VARCHAR},
      </if>
      <if test="subContract != null">
        sub_contract = #{subContract,jdbcType=VARCHAR},
      </if>
      <if test="comName != null">
        com_name = #{comName,jdbcType=VARCHAR},
      </if>
      <if test="ext1 != null">
        ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null">
        ext3 = #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="ext4 != null">
        ext4 = #{ext4,jdbcType=VARCHAR},
      </if>
      <if test="ext5 != null">
        ext5 = #{ext5,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.libiao.customer.dal.model.BasicTestItem">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    update basic_test_item
    set name = #{name,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      period = #{period,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=VARCHAR},
      sub_contract = #{subContract,jdbcType=VARCHAR},
      com_name = #{comName,jdbcType=VARCHAR},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR},
      ext3 = #{ext3,jdbcType=VARCHAR},
      ext4 = #{ext4,jdbcType=VARCHAR},
      ext5 = #{ext5,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libiao.customer.dal.model.BasicTestItem">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 27 14:52:21 CST 2022.
    -->
    update basic_test_item
    set name = #{name,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      period = #{period,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=VARCHAR},
      sub_contract = #{subContract,jdbcType=VARCHAR},
      com_name = #{comName,jdbcType=VARCHAR},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR},
      ext3 = #{ext3,jdbcType=VARCHAR},
      ext4 = #{ext4,jdbcType=VARCHAR},
      ext5 = #{ext5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>