<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libiao.customer.dal.mapper.CertificationMapper">

  <resultMap id="BaseResultMap" type="com.libiao.customer.dal.model.Certification">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="VARCHAR" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="VARCHAR" property="gmtModify" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="is_available" jdbcType="INTEGER" property="isAvailable" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="encryption_key" jdbcType="VARCHAR" property="encryptionKey" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from certification
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.libiao.customer.dal.model.Certification">
    insert into certification (id, gmt_create, gmt_modify,
      name, path, `desc`, is_available,
    username, encryption_key)
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}, 
      #{name,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{isAvailable,jdbcType=INTEGER}, 
      #{username,jdbcType=VARCHAR}, #{encryptionKey,jdbcType=VARCHAR})
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
        select LAST_INSERT_ID()
      </selectKey>
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.libiao.customer.dal.model.Certification">
    update certification
    set gmt_create = #{gmtCreate,jdbcType=VARCHAR},
      gmt_modify = #{gmtModify,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      is_available = #{isAvailable,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      encryption_key = #{encryptionKey,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, gmt_create, gmt_modify, name, path, `desc`, is_available, username, encryption_key
    from certification
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select id, gmt_create, gmt_modify, name, path, `desc`, is_available, username, encryption_key
    from certification
  </select>

  <select id="selectAllByUsername" resultMap="BaseResultMap">
    select id, gmt_create, gmt_modify, name, path, `desc`, is_available, username, encryption_key
    from certification
    where username = #{username,jdbcType=VARCHAR} and is_available = 0
  </select>

  <select id="selectByEncryptionKey" resultMap="BaseResultMap">
    select id, gmt_create, gmt_modify, name, path, `desc`, is_available, username, encryption_key
    from certification
    where encryption_key = #{encryptionKey,jdbcType=VARCHAR} and is_available = 0
  </select>

</mapper>