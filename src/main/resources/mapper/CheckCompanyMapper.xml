<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libiao.customer.dal.mapper.CheckCompanyMapper">
  <resultMap id="BaseResultMap" type="com.libiao.customer.dal.model.CheckCompany">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="com_name" jdbcType="VARCHAR" property="comName" />
    <result column="com_name_en" jdbcType="VARCHAR" property="comNameEn" />
    <result column="com_addr_cn" jdbcType="VARCHAR" property="comAddrCn" />
    <result column="com_addr_en" jdbcType="VARCHAR" property="comAddrEn" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="city_abbr" jdbcType="VARCHAR" property="cityAbbr" />
    <result column="com_phone" jdbcType="VARCHAR" property="comPhone" />
    <result column="com_fax" jdbcType="VARCHAR" property="comFax" />
    <result column="sub_contract" jdbcType="TINYINT" property="subContract" />
    <result column="auth_person" jdbcType="VARCHAR" property="authPerson" />
    <result column="cnas" jdbcType="TINYINT" property="cnas" />
    <result column="cma" jdbcType="TINYINT" property="cma" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, com_name, com_name_en, com_addr_cn, com_addr_en, city, city_abbr, com_phone, 
    com_fax, sub_contract, auth_person, cnas, cma
  </sql>
  <select id="selectByExample" parameterType="com.libiao.customer.dal.model.CheckCompanyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from check_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from check_company
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from check_company
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.libiao.customer.dal.model.CheckCompanyExample">
    delete from check_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.libiao.customer.dal.model.CheckCompany">
    insert into check_company (id, com_name, com_name_en, 
      com_addr_cn, com_addr_en, city, 
      city_abbr, com_phone, com_fax, 
      sub_contract, auth_person, cnas, 
      cma)
    values (#{id,jdbcType=BIGINT}, #{comName,jdbcType=VARCHAR}, #{comNameEn,jdbcType=VARCHAR}, 
      #{comAddrCn,jdbcType=VARCHAR}, #{comAddrEn,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{cityAbbr,jdbcType=VARCHAR}, #{comPhone,jdbcType=VARCHAR}, #{comFax,jdbcType=VARCHAR}, 
      #{subContract,jdbcType=TINYINT}, #{authPerson,jdbcType=VARCHAR}, #{cnas,jdbcType=TINYINT}, 
      #{cma,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.libiao.customer.dal.model.CheckCompany">
    insert into check_company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="comName != null">
        com_name,
      </if>
      <if test="comNameEn != null">
        com_name_en,
      </if>
      <if test="comAddrCn != null">
        com_addr_cn,
      </if>
      <if test="comAddrEn != null">
        com_addr_en,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="cityAbbr != null">
        city_abbr,
      </if>
      <if test="comPhone != null">
        com_phone,
      </if>
      <if test="comFax != null">
        com_fax,
      </if>
      <if test="subContract != null">
        sub_contract,
      </if>
      <if test="authPerson != null">
        auth_person,
      </if>
      <if test="cnas != null">
        cnas,
      </if>
      <if test="cma != null">
        cma,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="comName != null">
        #{comName,jdbcType=VARCHAR},
      </if>
      <if test="comNameEn != null">
        #{comNameEn,jdbcType=VARCHAR},
      </if>
      <if test="comAddrCn != null">
        #{comAddrCn,jdbcType=VARCHAR},
      </if>
      <if test="comAddrEn != null">
        #{comAddrEn,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="cityAbbr != null">
        #{cityAbbr,jdbcType=VARCHAR},
      </if>
      <if test="comPhone != null">
        #{comPhone,jdbcType=VARCHAR},
      </if>
      <if test="comFax != null">
        #{comFax,jdbcType=VARCHAR},
      </if>
      <if test="subContract != null">
        #{subContract,jdbcType=TINYINT},
      </if>
      <if test="authPerson != null">
        #{authPerson,jdbcType=VARCHAR},
      </if>
      <if test="cnas != null">
        #{cnas,jdbcType=TINYINT},
      </if>
      <if test="cma != null">
        #{cma,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.libiao.customer.dal.model.CheckCompanyExample" resultType="java.lang.Long">
    select count(*) from check_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update check_company
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.comName != null">
        com_name = #{row.comName,jdbcType=VARCHAR},
      </if>
      <if test="row.comNameEn != null">
        com_name_en = #{row.comNameEn,jdbcType=VARCHAR},
      </if>
      <if test="row.comAddrCn != null">
        com_addr_cn = #{row.comAddrCn,jdbcType=VARCHAR},
      </if>
      <if test="row.comAddrEn != null">
        com_addr_en = #{row.comAddrEn,jdbcType=VARCHAR},
      </if>
      <if test="row.city != null">
        city = #{row.city,jdbcType=VARCHAR},
      </if>
      <if test="row.cityAbbr != null">
        city_abbr = #{row.cityAbbr,jdbcType=VARCHAR},
      </if>
      <if test="row.comPhone != null">
        com_phone = #{row.comPhone,jdbcType=VARCHAR},
      </if>
      <if test="row.comFax != null">
        com_fax = #{row.comFax,jdbcType=VARCHAR},
      </if>
      <if test="row.subContract != null">
        sub_contract = #{row.subContract,jdbcType=TINYINT},
      </if>
      <if test="row.authPerson != null">
        auth_person = #{row.authPerson,jdbcType=VARCHAR},
      </if>
      <if test="row.cnas != null">
        cnas = #{row.cnas,jdbcType=TINYINT},
      </if>
      <if test="row.cma != null">
        cma = #{row.cma,jdbcType=TINYINT},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update check_company
    set id = #{row.id,jdbcType=BIGINT},
      com_name = #{row.comName,jdbcType=VARCHAR},
      com_name_en = #{row.comNameEn,jdbcType=VARCHAR},
      com_addr_cn = #{row.comAddrCn,jdbcType=VARCHAR},
      com_addr_en = #{row.comAddrEn,jdbcType=VARCHAR},
      city = #{row.city,jdbcType=VARCHAR},
      city_abbr = #{row.cityAbbr,jdbcType=VARCHAR},
      com_phone = #{row.comPhone,jdbcType=VARCHAR},
      com_fax = #{row.comFax,jdbcType=VARCHAR},
      sub_contract = #{row.subContract,jdbcType=TINYINT},
      auth_person = #{row.authPerson,jdbcType=VARCHAR},
      cnas = #{row.cnas,jdbcType=TINYINT},
      cma = #{row.cma,jdbcType=TINYINT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.libiao.customer.dal.model.CheckCompany">
    update check_company
    <set>
      <if test="comName != null">
        com_name = #{comName,jdbcType=VARCHAR},
      </if>
      <if test="comNameEn != null">
        com_name_en = #{comNameEn,jdbcType=VARCHAR},
      </if>
      <if test="comAddrCn != null">
        com_addr_cn = #{comAddrCn,jdbcType=VARCHAR},
      </if>
      <if test="comAddrEn != null">
        com_addr_en = #{comAddrEn,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="cityAbbr != null">
        city_abbr = #{cityAbbr,jdbcType=VARCHAR},
      </if>
      <if test="comPhone != null">
        com_phone = #{comPhone,jdbcType=VARCHAR},
      </if>
      <if test="comFax != null">
        com_fax = #{comFax,jdbcType=VARCHAR},
      </if>
      <if test="subContract != null">
        sub_contract = #{subContract,jdbcType=TINYINT},
      </if>
      <if test="authPerson != null">
        auth_person = #{authPerson,jdbcType=VARCHAR},
      </if>
      <if test="cnas != null">
        cnas = #{cnas,jdbcType=TINYINT},
      </if>
      <if test="cma != null">
        cma = #{cma,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libiao.customer.dal.model.CheckCompany">
    update check_company
    set com_name = #{comName,jdbcType=VARCHAR},
      com_name_en = #{comNameEn,jdbcType=VARCHAR},
      com_addr_cn = #{comAddrCn,jdbcType=VARCHAR},
      com_addr_en = #{comAddrEn,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      city_abbr = #{cityAbbr,jdbcType=VARCHAR},
      com_phone = #{comPhone,jdbcType=VARCHAR},
      com_fax = #{comFax,jdbcType=VARCHAR},
      sub_contract = #{subContract,jdbcType=TINYINT},
      auth_person = #{authPerson,jdbcType=VARCHAR},
      cnas = #{cnas,jdbcType=TINYINT},
      cma = #{cma,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>