<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libiao.customer.dal.mapper.ClientBillOutMapper">
  <resultMap id="BaseResultMap" type="com.libiao.customer.dal.model.ClientBillOut">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="trade_id" jdbcType="VARCHAR" property="tradeId" />
    <result column="onaccount_amt" jdbcType="BIGINT" property="onaccountAmt" />
    <result column="un_amt" jdbcType="BIGINT" property="unAmt" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="oper_time" jdbcType="TIMESTAMP" property="operTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from client_bill_out
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    insert into client_bill_out (id, client_id, trade_id, 
      onaccount_amt, un_amt, start_time, 
      last_time, oper_time, status
      )
    values (#{id,jdbcType=BIGINT}, #{clientId,jdbcType=VARCHAR}, #{tradeId,jdbcType=VARCHAR}, 
      #{onaccountAmt,jdbcType=BIGINT}, #{unAmt,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, 
      #{lastTime,jdbcType=TIMESTAMP}, #{operTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    update client_bill_out
    set client_id = #{clientId,jdbcType=VARCHAR},
      trade_id = #{tradeId,jdbcType=VARCHAR},
      onaccount_amt = #{onaccountAmt,jdbcType=BIGINT},
      un_amt = #{unAmt,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      oper_time = #{operTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, client_id, trade_id, onaccount_amt, un_amt, start_time, last_time, oper_time, 
    status
    from client_bill_out
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, client_id, trade_id, onaccount_amt, un_amt, start_time, last_time, oper_time, 
    status
    from client_bill_out
  </select>
</mapper>