<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libiao.customer.dal.mapper.ClientBillOutMapper">
  <resultMap id="BaseResultMap" type="com.libiao.customer.dal.model.ClientBillOut">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="trade_id" jdbcType="VARCHAR" property="tradeId" />
    <result column="onaccount_amt" jdbcType="BIGINT" property="onaccountAmt" />
    <result column="un_amt" jdbcType="BIGINT" property="unAmt" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="oper_time" jdbcType="TIMESTAMP" property="operTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="oper_user" jdbcType="VARCHAR" property="operUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, client_id, trade_id, onaccount_amt, un_amt, start_time, last_time, oper_time, 
    status, oper_user
  </sql>
  <select id="selectByExample" parameterType="com.libiao.customer.dal.model.ClientBillOutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from client_bill_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from client_bill_out
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from client_bill_out
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.libiao.customer.dal.model.ClientBillOutExample">
    delete from client_bill_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    insert into client_bill_out (id, client_id, trade_id, 
      onaccount_amt, un_amt, start_time, 
      last_time, oper_time, status, 
      oper_user)
    values (#{id,jdbcType=BIGINT}, #{clientId,jdbcType=VARCHAR}, #{tradeId,jdbcType=VARCHAR}, 
      #{onaccountAmt,jdbcType=BIGINT}, #{unAmt,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, 
      #{lastTime,jdbcType=TIMESTAMP}, #{operTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{operUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    insert into client_bill_out
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="tradeId != null">
        trade_id,
      </if>
      <if test="onaccountAmt != null">
        onaccount_amt,
      </if>
      <if test="unAmt != null">
        un_amt,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="operTime != null">
        oper_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="operUser != null">
        oper_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="tradeId != null">
        #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="onaccountAmt != null">
        #{onaccountAmt,jdbcType=BIGINT},
      </if>
      <if test="unAmt != null">
        #{unAmt,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operTime != null">
        #{operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="operUser != null">
        #{operUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.libiao.customer.dal.model.ClientBillOutExample" resultType="java.lang.Long">
    select count(*) from client_bill_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update client_bill_out
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.clientId != null">
        client_id = #{row.clientId,jdbcType=VARCHAR},
      </if>
      <if test="row.tradeId != null">
        trade_id = #{row.tradeId,jdbcType=VARCHAR},
      </if>
      <if test="row.onaccountAmt != null">
        onaccount_amt = #{row.onaccountAmt,jdbcType=BIGINT},
      </if>
      <if test="row.unAmt != null">
        un_amt = #{row.unAmt,jdbcType=BIGINT},
      </if>
      <if test="row.startTime != null">
        start_time = #{row.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.lastTime != null">
        last_time = #{row.lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.operTime != null">
        oper_time = #{row.operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=VARCHAR},
      </if>
      <if test="row.operUser != null">
        oper_user = #{row.operUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update client_bill_out
    set id = #{row.id,jdbcType=BIGINT},
      client_id = #{row.clientId,jdbcType=VARCHAR},
      trade_id = #{row.tradeId,jdbcType=VARCHAR},
      onaccount_amt = #{row.onaccountAmt,jdbcType=BIGINT},
      un_amt = #{row.unAmt,jdbcType=BIGINT},
      start_time = #{row.startTime,jdbcType=TIMESTAMP},
      last_time = #{row.lastTime,jdbcType=TIMESTAMP},
      oper_time = #{row.operTime,jdbcType=TIMESTAMP},
      status = #{row.status,jdbcType=VARCHAR},
      oper_user = #{row.operUser,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    update client_bill_out
    <set>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="tradeId != null">
        trade_id = #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="onaccountAmt != null">
        onaccount_amt = #{onaccountAmt,jdbcType=BIGINT},
      </if>
      <if test="unAmt != null">
        un_amt = #{unAmt,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operTime != null">
        oper_time = #{operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="operUser != null">
        oper_user = #{operUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    update client_bill_out
    set client_id = #{clientId,jdbcType=VARCHAR},
      trade_id = #{tradeId,jdbcType=VARCHAR},
      onaccount_amt = #{onaccountAmt,jdbcType=BIGINT},
      un_amt = #{unAmt,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      oper_time = #{operTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      oper_user = #{operUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.libiao.customer.dal.model.ClientBillOut">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="trade_id" jdbcType="VARCHAR" property="tradeId" />
    <result column="onaccount_amt" jdbcType="BIGINT" property="onaccountAmt" />
    <result column="un_amt" jdbcType="BIGINT" property="unAmt" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="oper_time" jdbcType="TIMESTAMP" property="operTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, client_id, trade_id, onaccount_amt, un_amt, start_time, last_time, oper_time, 
    status
  </sql>
  <select id="selectByExample" parameterType="com.libiao.customer.dal.model.ClientBillOutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from client_bill_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from client_bill_out
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from client_bill_out
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.libiao.customer.dal.model.ClientBillOutExample">
    delete from client_bill_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    insert into client_bill_out (id, client_id, trade_id, 
      onaccount_amt, un_amt, start_time, 
      last_time, oper_time, status
      )
    values (#{id,jdbcType=BIGINT}, #{clientId,jdbcType=VARCHAR}, #{tradeId,jdbcType=VARCHAR}, 
      #{onaccountAmt,jdbcType=BIGINT}, #{unAmt,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, 
      #{lastTime,jdbcType=TIMESTAMP}, #{operTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    insert into client_bill_out
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="tradeId != null">
        trade_id,
      </if>
      <if test="onaccountAmt != null">
        onaccount_amt,
      </if>
      <if test="unAmt != null">
        un_amt,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="operTime != null">
        oper_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="tradeId != null">
        #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="onaccountAmt != null">
        #{onaccountAmt,jdbcType=BIGINT},
      </if>
      <if test="unAmt != null">
        #{unAmt,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operTime != null">
        #{operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.libiao.customer.dal.model.ClientBillOutExample" resultType="java.lang.Long">
    select count(*) from client_bill_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update client_bill_out
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.clientId != null">
        client_id = #{row.clientId,jdbcType=VARCHAR},
      </if>
      <if test="row.tradeId != null">
        trade_id = #{row.tradeId,jdbcType=VARCHAR},
      </if>
      <if test="row.onaccountAmt != null">
        onaccount_amt = #{row.onaccountAmt,jdbcType=BIGINT},
      </if>
      <if test="row.unAmt != null">
        un_amt = #{row.unAmt,jdbcType=BIGINT},
      </if>
      <if test="row.startTime != null">
        start_time = #{row.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.lastTime != null">
        last_time = #{row.lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.operTime != null">
        oper_time = #{row.operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update client_bill_out
    set id = #{row.id,jdbcType=BIGINT},
      client_id = #{row.clientId,jdbcType=VARCHAR},
      trade_id = #{row.tradeId,jdbcType=VARCHAR},
      onaccount_amt = #{row.onaccountAmt,jdbcType=BIGINT},
      un_amt = #{row.unAmt,jdbcType=BIGINT},
      start_time = #{row.startTime,jdbcType=TIMESTAMP},
      last_time = #{row.lastTime,jdbcType=TIMESTAMP},
      oper_time = #{row.operTime,jdbcType=TIMESTAMP},
      status = #{row.status,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    update client_bill_out
    <set>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="tradeId != null">
        trade_id = #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="onaccountAmt != null">
        onaccount_amt = #{onaccountAmt,jdbcType=BIGINT},
      </if>
      <if test="unAmt != null">
        un_amt = #{unAmt,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operTime != null">
        oper_time = #{operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    update client_bill_out
    set client_id = #{clientId,jdbcType=VARCHAR},
      trade_id = #{tradeId,jdbcType=VARCHAR},
      onaccount_amt = #{onaccountAmt,jdbcType=BIGINT},
      un_amt = #{unAmt,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      oper_time = #{operTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.libiao.customer.dal.model.ClientBillOut">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="trade_id" jdbcType="VARCHAR" property="tradeId" />
    <result column="onaccount_amt" jdbcType="BIGINT" property="onaccountAmt" />
    <result column="un_amt" jdbcType="BIGINT" property="unAmt" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="oper_time" jdbcType="TIMESTAMP" property="operTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, client_id, trade_id, onaccount_amt, un_amt, start_time, last_time, oper_time, 
    status
  </sql>
  <select id="selectByExample" parameterType="com.libiao.customer.dal.model.ClientBillOutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from client_bill_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from client_bill_out
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from client_bill_out
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.libiao.customer.dal.model.ClientBillOutExample">
    delete from client_bill_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    insert into client_bill_out (id, client_id, trade_id, 
      onaccount_amt, un_amt, start_time, 
      last_time, oper_time, status
      )
    values (#{id,jdbcType=BIGINT}, #{clientId,jdbcType=VARCHAR}, #{tradeId,jdbcType=VARCHAR}, 
      #{onaccountAmt,jdbcType=BIGINT}, #{unAmt,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, 
      #{lastTime,jdbcType=TIMESTAMP}, #{operTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    insert into client_bill_out
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="tradeId != null">
        trade_id,
      </if>
      <if test="onaccountAmt != null">
        onaccount_amt,
      </if>
      <if test="unAmt != null">
        un_amt,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="operTime != null">
        oper_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="tradeId != null">
        #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="onaccountAmt != null">
        #{onaccountAmt,jdbcType=BIGINT},
      </if>
      <if test="unAmt != null">
        #{unAmt,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operTime != null">
        #{operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.libiao.customer.dal.model.ClientBillOutExample" resultType="java.lang.Long">
    select count(*) from client_bill_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update client_bill_out
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.clientId != null">
        client_id = #{row.clientId,jdbcType=VARCHAR},
      </if>
      <if test="row.tradeId != null">
        trade_id = #{row.tradeId,jdbcType=VARCHAR},
      </if>
      <if test="row.onaccountAmt != null">
        onaccount_amt = #{row.onaccountAmt,jdbcType=BIGINT},
      </if>
      <if test="row.unAmt != null">
        un_amt = #{row.unAmt,jdbcType=BIGINT},
      </if>
      <if test="row.startTime != null">
        start_time = #{row.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.lastTime != null">
        last_time = #{row.lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.operTime != null">
        oper_time = #{row.operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update client_bill_out
    set id = #{row.id,jdbcType=BIGINT},
      client_id = #{row.clientId,jdbcType=VARCHAR},
      trade_id = #{row.tradeId,jdbcType=VARCHAR},
      onaccount_amt = #{row.onaccountAmt,jdbcType=BIGINT},
      un_amt = #{row.unAmt,jdbcType=BIGINT},
      start_time = #{row.startTime,jdbcType=TIMESTAMP},
      last_time = #{row.lastTime,jdbcType=TIMESTAMP},
      oper_time = #{row.operTime,jdbcType=TIMESTAMP},
      status = #{row.status,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    update client_bill_out
    <set>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="tradeId != null">
        trade_id = #{tradeId,jdbcType=VARCHAR},
      </if>
      <if test="onaccountAmt != null">
        onaccount_amt = #{onaccountAmt,jdbcType=BIGINT},
      </if>
      <if test="unAmt != null">
        un_amt = #{unAmt,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operTime != null">
        oper_time = #{operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    update client_bill_out
    set client_id = #{clientId,jdbcType=VARCHAR},
      trade_id = #{tradeId,jdbcType=VARCHAR},
      onaccount_amt = #{onaccountAmt,jdbcType=BIGINT},
      un_amt = #{unAmt,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      oper_time = #{operTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.libiao.customer.dal.model.ClientBillOut">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="trade_id" jdbcType="VARCHAR" property="tradeId" />
    <result column="onaccount_amt" jdbcType="BIGINT" property="onaccountAmt" />
    <result column="un_amt" jdbcType="BIGINT" property="unAmt" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="oper_time" jdbcType="TIMESTAMP" property="operTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from client_bill_out
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    insert into client_bill_out (id, client_id, trade_id, 
      onaccount_amt, un_amt, start_time, 
      last_time, oper_time, status
      )
    values (#{id,jdbcType=BIGINT}, #{clientId,jdbcType=VARCHAR}, #{tradeId,jdbcType=VARCHAR}, 
      #{onaccountAmt,jdbcType=BIGINT}, #{unAmt,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, 
      #{lastTime,jdbcType=TIMESTAMP}, #{operTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.libiao.customer.dal.model.ClientBillOut">
    update client_bill_out
    set client_id = #{clientId,jdbcType=VARCHAR},
      trade_id = #{tradeId,jdbcType=VARCHAR},
      onaccount_amt = #{onaccountAmt,jdbcType=BIGINT},
      un_amt = #{unAmt,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      oper_time = #{operTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, client_id, trade_id, onaccount_amt, un_amt, start_time, last_time, oper_time, 
    status
    from client_bill_out
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, client_id, trade_id, onaccount_amt, un_amt, start_time, last_time, oper_time, 
    status
    from client_bill_out
  </select>
</mapper>