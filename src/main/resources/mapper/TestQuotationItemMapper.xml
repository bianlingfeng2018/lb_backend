<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.libiao.customer.dal.mapper.TestQuotationItemMapper">
  <resultMap id="BaseResultMap" type="com.libiao.customer.dal.model.TestQuotationItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="test_quotation_num" jdbcType="VARCHAR" property="testQuotationNum" />
    <result column="test_quotation_goods_id" jdbcType="BIGINT" property="testQuotationGoodsId" />
    <result column="test_item" jdbcType="VARCHAR" property="testItem" />
    <result column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="unit_price" jdbcType="INTEGER" property="unitPrice" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="amount_rmb" jdbcType="INTEGER" property="amountRmb" />
    <result column="sample_qty" jdbcType="INTEGER" property="sampleQty" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, test_quotation_num, test_quotation_goods_id, test_item, item_id, unit_price, 
    quantity, amount_rmb, sample_qty
  </sql>
  <select id="selectByExample" parameterType="com.libiao.customer.dal.model.TestQuotationItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test_quotation_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test_quotation_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from test_quotation_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.libiao.customer.dal.model.TestQuotationItemExample">
    delete from test_quotation_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.libiao.customer.dal.model.TestQuotationItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_quotation_item (test_quotation_num, test_quotation_goods_id, 
      test_item, item_id, unit_price, 
      quantity, amount_rmb, sample_qty
      )
    values (#{testQuotationNum,jdbcType=VARCHAR}, #{testQuotationGoodsId,jdbcType=BIGINT}, 
      #{testItem,jdbcType=VARCHAR}, #{itemId,jdbcType=INTEGER}, #{unitPrice,jdbcType=INTEGER}, 
      #{quantity,jdbcType=INTEGER}, #{amountRmb,jdbcType=INTEGER}, #{sampleQty,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.libiao.customer.dal.model.TestQuotationItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into test_quotation_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testQuotationNum != null">
        test_quotation_num,
      </if>
      <if test="testQuotationGoodsId != null">
        test_quotation_goods_id,
      </if>
      <if test="testItem != null">
        test_item,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="amountRmb != null">
        amount_rmb,
      </if>
      <if test="sampleQty != null">
        sample_qty,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testQuotationNum != null">
        #{testQuotationNum,jdbcType=VARCHAR},
      </if>
      <if test="testQuotationGoodsId != null">
        #{testQuotationGoodsId,jdbcType=BIGINT},
      </if>
      <if test="testItem != null">
        #{testItem,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="amountRmb != null">
        #{amountRmb,jdbcType=INTEGER},
      </if>
      <if test="sampleQty != null">
        #{sampleQty,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.libiao.customer.dal.model.TestQuotationItemExample" resultType="java.lang.Long">
    select count(*) from test_quotation_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update test_quotation_item
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.testQuotationNum != null">
        test_quotation_num = #{row.testQuotationNum,jdbcType=VARCHAR},
      </if>
      <if test="row.testQuotationGoodsId != null">
        test_quotation_goods_id = #{row.testQuotationGoodsId,jdbcType=BIGINT},
      </if>
      <if test="row.testItem != null">
        test_item = #{row.testItem,jdbcType=VARCHAR},
      </if>
      <if test="row.itemId != null">
        item_id = #{row.itemId,jdbcType=INTEGER},
      </if>
      <if test="row.unitPrice != null">
        unit_price = #{row.unitPrice,jdbcType=INTEGER},
      </if>
      <if test="row.quantity != null">
        quantity = #{row.quantity,jdbcType=INTEGER},
      </if>
      <if test="row.amountRmb != null">
        amount_rmb = #{row.amountRmb,jdbcType=INTEGER},
      </if>
      <if test="row.sampleQty != null">
        sample_qty = #{row.sampleQty,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update test_quotation_item
    set id = #{row.id,jdbcType=BIGINT},
      test_quotation_num = #{row.testQuotationNum,jdbcType=VARCHAR},
      test_quotation_goods_id = #{row.testQuotationGoodsId,jdbcType=BIGINT},
      test_item = #{row.testItem,jdbcType=VARCHAR},
      item_id = #{row.itemId,jdbcType=INTEGER},
      unit_price = #{row.unitPrice,jdbcType=INTEGER},
      quantity = #{row.quantity,jdbcType=INTEGER},
      amount_rmb = #{row.amountRmb,jdbcType=INTEGER},
      sample_qty = #{row.sampleQty,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.libiao.customer.dal.model.TestQuotationItem">
    update test_quotation_item
    <set>
      <if test="testQuotationNum != null">
        test_quotation_num = #{testQuotationNum,jdbcType=VARCHAR},
      </if>
      <if test="testQuotationGoodsId != null">
        test_quotation_goods_id = #{testQuotationGoodsId,jdbcType=BIGINT},
      </if>
      <if test="testItem != null">
        test_item = #{testItem,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="amountRmb != null">
        amount_rmb = #{amountRmb,jdbcType=INTEGER},
      </if>
      <if test="sampleQty != null">
        sample_qty = #{sampleQty,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.libiao.customer.dal.model.TestQuotationItem">
    update test_quotation_item
    set test_quotation_num = #{testQuotationNum,jdbcType=VARCHAR},
      test_quotation_goods_id = #{testQuotationGoodsId,jdbcType=BIGINT},
      test_item = #{testItem,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      amount_rmb = #{amountRmb,jdbcType=INTEGER},
      sample_qty = #{sampleQty,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>